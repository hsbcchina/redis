1.说说你知道的js的一些方法。
	substr（）substring（）split（）toLocalLowerCase（）toString（）toUpperCase（）
	toTimeString（）max（）min（）pop（）random（）getMonth（）getDate（）getYear（）


2.简单的说说ajax的作用。
	ajax：异步请求，用户发送请求后，无需等待，

	
3.请列举一下常用的集合。
			collection（单值类型集合）			Map(键值对集合)
	list					set			HashMap
									TreeMap
	ArrayList				HashSet
	LinkedList				TreeSet
	Vector
	Stack		
	

4.说说你知道的线程的实现方法。
	extends Thread（）	覆盖run（）
	implements Runable（）	覆盖run（）
	implements Callable（）	覆盖call（）

线程五大状态：新生 就绪 阻塞 运行 消亡
5.缓存公交用的是什么，请详细说说。		缓存公交是什么?
	


6.在开放过程中有没有遇到一些优化的处理。	?
	
	数据库优化
	对于Oracle数据库，可以使用表空间，将项目中用户所有的表存放在一个单独的表空间中，能够避免多个用户范文同一数据文件带来的资源争用问题；而且方便数据备份
	可以使用为一些表创建适当的视图，在一些统计功能中sqk语句可能比较复杂且固定，视图可以将查询语句编译并保存起来，以供下次执行，还能屏蔽某些敏感字段
	可以使用存储过程完成复杂的操作，能够避免java与数据库之间的多次交互从而提高程序执行的效率
	对于经常查询的表中的字段可以适当创建索引
	
	sql语句优化
	适当使用索引
	避免使用 in some any all关键字
	避免使用like关键字，可以使用instr代替
	多表关联中关联条件写在左侧，过滤条件写在右侧
	水平分表

7。怎么实现前台到后台的数据传输。		?
	ajax的data
	表单
	还有么？


8。spring是干嘛的请解释一下。
	Spring核心是ioc和aop
	
	ioc：控制反转 也称依赖注入 用来描述对象是如何创建的以及他们之间的依赖关系是如何形成的	
	相对于普通的工厂模式，多了一个ioc容器，将我们需要创建的对象配置在ioc容器中以反射的方式创建对象
	
	他们之间的依赖关系是通过被动注入的方式形成的，ioc容器提供了三种被动注入的方式
setter注入	构造器注入	方法注入

	
	aop技术是面向切面编程思想，作为oop的延续思想添加的企业开发中，用来弥补oop思想的不足	不足：通过封装 继承 多态的方式实现对象之间的关系的这种方式，以对象调用或者方法调用的方式形式对象之间的依赖关系，会造成对象之间的高度耦合性
	aop技术 将系统分成两大部分 一是核心的业务逻辑部分 一是非核心的通用服务部分 aop的关注点在于非核心部分，将非核心部分打包成一种aop组件，相较于普通的Object对象而言，不需要河西对象以继承或者方法调用的方式哦获取组件提供的服务，只需要在ioc容器中以配置和引用的方式将aop组件提供的服务引用给需要该服务的核心对象即可
ioc控制反转，依赖注入，是描述对象是如何创建的，以及他们之间的依赖关系是如何形成的，多了一个IOC容器，通过反射的方式创建对象，


9.ioc的作用能详细的解释一下吗。
	ioc：控制反转 也称依赖注入 用来描述对象是如何创建的以及他们之间的依赖关系是如何形成的
	多了一个ioc容器，将我们需要创建的对象配置在ioc容器中以反射的方式创建对象
	他们之间的依赖关系是通过被动注入的方式形成的，ioc容器提供了三种被动注入的方式
	setter注入	构造器注入	方法注入

	

10.注解是用来干嘛的，能不能详细的的举例说明。
	简化代码
	@RequestMapping	用来标注方法
	@ResponsBody	用来标注返回json数据
	@Autowired		注入 只找类型
	@Resource		注入  jdk注解 
	@Component
	@Service		实例化对象
	@Controller	    实例化对象
	等等等等一堆，自己找找spring注解随便搂几个过来


11.事物会用么？解释一下他的统一性。
	会
	统一性（就是一致性）事务中要操作的数据要跟数据库中保持一致
	原子性 事务是一个整体 不可分割
	持久性 事务能够持久化数据
	隔离性 事务与事务之间操作一个数据可能出现的问题



这是一面

二面会根据你的项目问你里面涉及到的知识。
如果能接到第三个电话  你就过了  